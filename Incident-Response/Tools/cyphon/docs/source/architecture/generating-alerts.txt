.. _generating-alerts:

###########################
How Cyphon Generates Alerts
###########################

.. image:: ../_static/images/icons/alert.png
   :width: 100px
   :align: left

Cyphon can generate alerts based on either the characteristics of the data itself or the rate at which the data is being saved. The :ref:`Watchdogs<watchdogs>` package analyzes the data being saved and generates alerts for data that meet certain conditions. The :ref:`Monitors<monitors>` package monitors data flow and generates alerts if data is not being saved at an expected rate.

  * :ref:`watchdogs-app`

    * :ref:`triggers`

    * :ref:`muzzles`

  * :ref:`monitors-app`


.. _watchdogs-app:

*********
Watchdogs
*********

.. image:: ../_static/images/icons/watchdog.png
  :width: 100px
  :align: left

|Watchdogs| generate |Alerts| with the help of Django Signals_. Signals allow an application to be notified when a certain action occurs in another application. In Cyphon, signals are used by |Distilleries| to notify |Watchdogs| that data has been saved.

When a |Distillery| saves a document, it sends a |document_saved| signal. The |document_saved| signal contains a |DocumentObj| that has the following properties:

    *data*
        a copy of the document that was saved

    *distillery*
        the |Distillery| that saved the document

    *doc_id*
        the id of the document

The *distillery* and *doc_id* provide the information needed to retrieve the saved document.

The |document_saved| signal is received by the |inspect_document| signal reciever in the :ref:`Watchdogs<watchdogs>` app. The signal receiver calls all enabled |Watchdogs| to inspect the |DocumentObj| contained. Each |Watchdog| has its own set of |Triggers| which will cause it to generate an |Alert|.

If an |Alert| is created, the *distillery* and *doc_id* of the |DocumentObj| are saved to the |distillery| and |doc_id| attributes of the |Alert|. This allows the |Alert| to retrieve the original data when needed.


.. _triggers:

Triggers
========

A |Trigger| defines rules for |Alert| generation. A |Trigger| uses a |sieve| to determine whether the document matches certain criteria. If the document matches these criteria, the |Trigger| is "fired" and the |Watchdog| generates an |Alert|. The priority of the |Alert| is defined by the |Trigger|'s |alert_level|.

A |Watchdog| may have more than one |Trigger|. This allows a |Watchdog| to map different rules to different alert levels. |Triggers| are evaluated in order of their |rank|.


.. _muzzles:

Muzzles
=======

It's possible that a |Distillery| may save many similar documents in a short period of time. In such cases, a |Watchdog| may generate a flood of essentially duplicate |Alerts|. To prevent this behavior, a |Watchdog| can be "muzzled" for a certain length of time. 

A |Muzzle| defines conditions under which "duplicate" |Alerts| should be suppressed. A "duplicate" |Alert| is defined according to features of the |Alert| and the |Alert.data| document with which it is associated.

To determine whether a given |Alert| is a duplicate, it is compared to previous |Alerts| generated within the time frame specified by the |Muzzle|'s |time_interval|. An |Alert| is condidered a duplicate if it shares the following features with a previous |Alert| and that |Alert|'s |Alert.data|:

    Duplicated Alert features:

    - was generated by the same |Watchdog|
    - has the same |level|

    Duplicated document features:

    - was processed by the same |Distillery|
    - has certain |Alert.data| fields with the same value

The |Muzzle|'s |matching_fields| attribute defines which fields of the |Alert|'s |Alert.data| must have duplicate values. For example, if the value for |matching_fields| is "message, source_ip", the values of both the "message" and "source_ip" fields must match the values of the message" and "source_ip" fields in the previous |Alert|'s |Alert.data|.

When a |Muzzle| prevents a |Watchdog| from generating a duplicate of a previous |Alert|, the incident is recorded by incrementing the |incidents| attribute of the previous |Alert|. This provides a record of how many duplicates of the |Alert| were suppressed.


.. _monitors-app:

********
Monitors
********

.. image:: ../_static/images/icons/monitor.png
  :width: 100px
  :align: left

A |Monitor| watches one or more |Distilleries|, and regularly queries the associated data store(s) to look for newly saved documents. It has a "healthy" GREEN |status| when it can find at least one document from any of its |distilleries| that was saved within the |Monitor|'s specified |time_interval2|. The |status| switches to RED if no documents have been saved to its |distilleries| within this interval.

The |status| of |Monitors| is updated by the |run_health_check| task, which is executed according to the |CELERYBEAT_SCHEDULE|.

When a |Monitor| has |alerts_enabled|, it will generate an |Alert| when its |status| switches from GREEN to RED. If a |Monitor| also has |repeating_alerts|, it will generate an |Alert| at each subsequent monitoring interval while its |status| is still RED.

The |level| of the |Alert| generated by a |Monitor| is determined by the |Monitor|'s |alert_level2|.

To help diagnose problems, the |Monitor| shows the last document saved by its last active |Distillery|. It also saves the id and date of the last |Alert| it generated, as well as the date it was last healthy. 


.. |alert_level| replace:: :attr:`~watchdogs.models.Trigger.alert_level`
.. |alert_level2| replace:: :attr:`~monitors.models.Monitor.alert_level`
.. |alerts_enabled| replace:: :attr:`~monitors.models.Monitor.alerts_enabled`
.. |distillery| replace:: :attr:`~alerts.models.Alert.distillery`
.. |distilleries| replace:: :attr:`~monitors.models.Monitor.distilleries`
.. |doc_id| replace:: :attr:`~alerts.models.Alert.doc_id`
.. |incidents| replace:: :attr:`~alerts.models.Alert.incidents`
.. |inspect_document| replace:: :obj:`~watchdogs.signals.inspect_document`
.. |level| replace:: :attr:`~alerts.models.Alert.level`
.. |matching_fields| replace:: :attr:`~watchdogs.models.Muzzle.matching_fields`
.. |rank| replace:: :attr:`~watchdogs.models.Trigger.rank`
.. |repeating_alerts| replace:: :attr:`~monitors.models.Monitor.repeating_alerts`
.. |run_health_check| replace:: :attr:`run_health_check<cyphon.tasks.run_health_check>`
.. |sieve| replace:: :attr:`~watchdogs.models.Trigger.sieve`
.. |status| replace:: :attr:`~monitors.models.Monitor.status`
.. |time_interval| replace:: :attr:`~watchdogs.models.Muzzle.time_interval`
.. |time_interval2| replace:: :attr:`~monitors.models.Monitor.time_interval`
