# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-08-18 20:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import utils.validators.validators


class Migration(migrations.Migration):

    dependencies = [
        ('articles', '0001_initial'),
        ('containers', '0002_auto_20170320_1223'),
        ('tags', '0002_auto_20170810_1608'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataTagger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=255, help_text='The name of the Container field that should be analyzed for tagging. Use dot notation to indicate nested fields (e.g., "user.name").')),
                ('exact_match', models.BooleanField(default=False, help_text='Match the entire content of the field. If checked, please select one and only one tag topic for analyzing this field.')),
                ('create_tags', models.BooleanField(default=False, help_text='Create new tags from this field (only available when using exact match).')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='containers.Container')),
                ('enabled', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['container', 'field_name'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(help_text='Tags must be lowercase.', max_length=255, validators=[utils.validators.validators.lowercase_validator]),
        ),
        migrations.AddField(
            model_name='datatagger',
            name='topics',
            field=models.ManyToManyField(help_text='Restrict tagging to these topics. If none are selected, all topics will be included in the analysis.', to='tags.Topic'),
        ),
        migrations.AddField(
            model_name='tag',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tags', related_query_name='tag', to='articles.Article'),
        ),
        migrations.AddField(
            model_name='tag',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tags', related_query_name='tag', to='tags.Topic'),
        ),
        migrations.AlterModelOptions(
            name='tag',
            options={'ordering': ['topic', 'name']},
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together=set([('name', 'topic')]),
        ),
        migrations.AlterUniqueTogether(
            name='datatagger',
            unique_together=set([('container', 'field_name')]),
        ),
    ]
